# base image
FROM oraclelinux:8

# Source: https://github.com/oraclebase/dockerfiles/blob/master/database/ol8_19/Dockerfile (06.06.2022)
#   braucht 3+ GB f√ºr Setup
#
# ------------------------------------------------------------------------------
# Define fixed (build time) environment variables.
ENV ORACLE_BASE=/u01/app/oracle                                                \
    ORACLE_HOME=/u01/app/oracle/product/19.0.0/dbhome_1                        \
    ORA_INVENTORY=/u01/app/oraInventory                                        \
    SOFTWARE_DIR=/u01/software                                                 \
    DB_SOFTWARE="LINUX.X64_193000_db_home.zip"                                 \
    #APEX_SOFTWARE="apex_22.1_en.zip"                                           \
    ORACLE_PASSWORD="oracle"                                                   \
    SCRIPTS_DIR=/u01/scripts                                                   \
    ORAENV_ASK=NO

# Separate ENV call to allow existing variables to be referenced.
ENV PATH=${ORACLE_HOME}/bin:${PATH}

# ------------------------------------------------------------------------------
# Define config (runtime) environment variables.
ENV ORACLE_SID=cdb1                                                            \
    SYS_PASSWORD="SysPassword1"                                                \
    PDB_NAME="pdb1"                                                            \
    PDB_PASSWORD="PdbPassword1"                                                \
    #INSTALL_APEX="true"                                                        \
    #APEX_EMAIL="me@example.com"                                                \
    #APEX_PASSWORD="ApexPassword1"

# ------------------------------------------------------------------------------
# Get all the files for the build.
COPY software/* ${SOFTWARE_DIR}/
COPY scripts/* ${SCRIPTS_DIR}/

# ------------------------------------------------------------------------------
# Unpack all the software and remove the media.
# No config done in the build phase.
#
# Manually create user and group as preinstall package creates the with
# high IDs, which causes issues. Note 2 on link below.
# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#user
#
#   ausgelassen
#
# Perform the following actions as the oracle user
USER oracle

# Unzip software
RUN cd ${ORACLE_HOME}                                                       && \
    unzip -oq ${SOFTWARE_DIR}/${DB_SOFTWARE}                                && \
    rm -f ${SOFTWARE_DIR}/${DB_SOFTWARE}

#
#      ausgelassen
#
# ------------------------------------------------------------------------------
# The start script performs all config based on runtime environment variables.
# First run creates the database.
CMD exec ${SCRIPTS_DIR}/start.sh

# End
