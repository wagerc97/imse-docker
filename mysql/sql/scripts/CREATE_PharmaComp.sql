/*******************************************************************************
This SQL script is part of the physical design of my DBS project:
"Pharmaceutical Company" for Milestone 3.
This code CREATES the TABLES, SEQUENCES, TRIGGERS and STORED PROCEDURES for 
the database.

------------------------- CREATE STATEMENTS ------------------------------------

Clemens Wager, 01635477
University of Vienna
VU Database Systems
SS2021

*******************************************************************************/

-- ------------------------------------------------------------------------------
-- CREATE TABLES
-- ------------------------------------------------------------------------------
CREATE TABLE Client(
    ID_client          INTEGER AUTO_INCREMENT,
    Client_Name        VARCHAR(50) NOT NULL,
    Country_Name       VARCHAR(25) NOT NULL, -- FK
    CONSTRAINT PK_client PRIMARY KEY (ID_client)
);


CREATE TABLE Product(
    ID_product          INTEGER AUTO_INCREMENT,
    Product_Name        VARCHAR(50) UNIQUE NOT NULL,
    Price               DECIMAL(8,2) NOT NULL,
    Indication          VARCHAR(40) NOT NULL, 
    CONSTRAINT PK_product PRIMARY KEY (ID_product)
);


CREATE TABLE Orders(
    ID_Orders          INTEGER AUTO_INCREMENT, -- GENERATED BY DEFAULT AS IDENTITY
    --                   (START WITH 1 INCREMENT BY 1), -- simple auto-increment
    ID_Product         INTEGER NOT NULL, -- FK
    ID_Client          INTEGER NOT NULL, -- FK
    Order_Date         DATE    NOT NULL, 
    Quantity           INTEGER NOT NULL,
    CONSTRAINT PK_orders PRIMARY KEY (ID_orders),
    CONSTRAINT quantity_range_check CHECK(Quantity >= 10 AND Quantity <= 999999)
);


CREATE TABLE Campaign(
    ID_Product          INTEGER NOT NULL, -- FK
    Campaign_Name       VARCHAR(40) NOT NULL, -- not UNIQUE because weak entity
    Start_date          DATE NOT NULL,
    End_date            DATE NOT NULL,
    CONSTRAINT PK_campaign PRIMARY KEY (ID_product, Campaign_Name),
    CONSTRAINT camp_date CHECK(Start_date < End_date) -- CHECK CONSTRAINT
);


CREATE TABLE Employee(
    ID_employee         INTEGER AUTO_INCREMENT, -- GENERATED BY DEFAULT AS IDENTITY
    --                    (START WITH 1 INCREMENT BY 1),  -- simple auto-increment
    Firstname           VARCHAR(25) NOT NULL,
    Lastname            VARCHAR(25) NOT NULL,
    Gender              VARCHAR(1)  NOT NULL,
    Salary              DECIMAL(8,2) DEFAULT 1500,
    Team_leader         INTEGER, -- FK
    Hire_date           DATE NOT NULL, 
    CONSTRAINT PK_emp PRIMARY KEY (ID_employee),
    CONSTRAINT emp_gender CHECK(Gender IN ('F','M','D')) -- CHECK CONSTRAINT
);


CREATE TABLE Marketing_emp(
    ID_employee     INTEGER, -- FK
    Occupation      VARCHAR(50),
    CONSTRAINT PK_mark PRIMARY KEY (ID_employee)
);


CREATE TABLE Advertises(
    ID_employee         INTEGER, -- FK
    ID_product          INTEGER, -- FK
    CONSTRAINT PK_adv PRIMARY KEY (ID_employee, ID_product)
);


CREATE TABLE General_Manager(
    ID_employee         INTEGER, -- FK
    ID_region           INTEGER UNIQUE NOT NULL, -- FK 
    CONSTRAINT PK_GM PRIMARY KEY (ID_employee)
);


CREATE TABLE Region(
    ID_region           INTEGER AUTO_INCREMENT, -- (2) GENERATED ALWAYS AS IDENTITY 
    --                    MINVALUE 1 
    --                    INCREMENT BY 1 START WITH 1,  -- auto-increment
    Region_Name         VARCHAR(25) UNIQUE NOT NULL,
    CONSTRAINT PK_region PRIMARY KEY (ID_region)
);


CREATE TABLE Country(
    Country_Name        VARCHAR(25) NOT NULL, -- PK
    ID_region           INTEGER NOT NULL,  -- FK
    CONSTRAINT PK_country PRIMARY KEY (Country_Name)
);


-- ------------------------------------------------------------------------------
-- ADD CONSTRAINTS
-- ------------------------------------------------------------------------------

-- Foreign keys
-- ------------------------------------------------------------------------------
ALTER TABLE Client
    ADD CONSTRAINT FK_client_country
    FOREIGN KEY (Country_Name) -- referencing table
    REFERENCES Country (Country_Name) -- referenced table
    ON DELETE CASCADE -- integrity
;

ALTER TABLE Orders                      
    ADD CONSTRAINT FK_orders_product   FOREIGN KEY (ID_product)
    REFERENCES Product (ID_product) ON DELETE CASCADE
;

ALTER TABLE Orders                      
    ADD CONSTRAINT FK_orders_client FOREIGN KEY (ID_client)
    REFERENCES Client (ID_client) ON DELETE CASCADE
;

ALTER TABLE Campaign                      
    ADD CONSTRAINT FK_camp_product FOREIGN KEY (ID_product)
    REFERENCES Product (ID_product) ON DELETE CASCADE
;
-- Team_leader ID
ALTER TABLE Employee                      
    ADD CONSTRAINT FK_emp_leader FOREIGN KEY (Team_leader)
    REFERENCES Employee (ID_employee) ON DELETE CASCADE
;

ALTER TABLE Marketing_emp                      
    ADD CONSTRAINT FK_mark_emp FOREIGN KEY (ID_employee)
    REFERENCES Employee (ID_employee) ON DELETE CASCADE
;

ALTER TABLE Advertises                    
    ADD CONSTRAINT FK_adv_prod FOREIGN KEY (ID_product)
    REFERENCES Product (ID_product) ON DELETE CASCADE
;

ALTER TABLE Advertises                     
    ADD CONSTRAINT FK_adv_mark FOREIGN KEY (ID_employee)
    REFERENCES Marketing_emp (ID_employee) ON DELETE CASCADE
;

ALTER TABLE General_Manager                      
    ADD CONSTRAINT FK_gm_emp FOREIGN KEY (ID_employee)
    REFERENCES Employee (ID_employee) ON DELETE CASCADE
;

ALTER TABLE General_Manager                      
    ADD CONSTRAINT FK_gm_prod FOREIGN KEY (ID_region)
    REFERENCES Region (ID_region) ON DELETE CASCADE
;

ALTER TABLE Country                 
    ADD CONSTRAINT FK_country_reg FOREIGN KEY (ID_region)
    REFERENCES Region (ID_region) ON DELETE CASCADE
;
